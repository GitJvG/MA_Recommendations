scraper:
  RETRIES: 10
  DELAY: 0.3
  BATCH_SIZE: 1000

urls:
  MODIFIED: "https://www.metal-archives.com/archives/ajax-band-list/by/modified/selection/"
  BANDS: "https://www.metal-archives.com/browse/ajax-letter/json/1/l/"
  LABELS: "https://www.metal-archives.com/label/ajax-list/json/1/l/"
  REVIEWS: "https://www.metal-archives.com/reviews/1/1/"
  SIMILAR: "https://www.metal-archives.com/band/ajax-recommendations/id/"
  DISC1: "https://www.metal-archives.com/band/discography/id/"
  DISC2: "/tab/all"
  DETAILS: "https://www.metal-archives.com/bands/id/"

website:
# Backend for importing playlist data and embedding videos. Options: "YTDLP", "YTAPI" and "SCRAPE". 
  # YTAPI: requires own API key, free key has limited free recourses per day

  # YTDLP: No setup required and unlimited usage, same search results as YTAPI.

  # SCRAPE: Best search results as it includes playlists and embeds them as a video list that automatically plays all videos. 
    # Playlist importing uses YTDLP method.
    # Playlist thumbnails are retrieved by YTDLP. This was done because official music playlists such as albums can have a different thumbnail than the first videeo.
    # If YTDLP fails to retrieve a thumbnail or the best result is a video, the (first) video thumbnail will be used.

    # Pros: Improved search results by preferring official album playlists whilst falling back on video results.
    # Cons: Will break when/if youtube makes significant changes.

  YOUTUBE_BACKEND: "SCRAPE"

word_processing:
  UNWANTED_GENRE_WORDS: [
        "influences", 
        "earlier", 
        "later", 
        "early", 
        "or", 
        "mid", 
        "late", 
        "from", 
        "elements", 
        "music"]
  BINARY_EXCEPTION: [
        "score",
        "age",
        "listening",
        "nova",
        "word",
        "cappella",
        "hop",
        "beat",
        "garde"]
  TERNARY_EXCEPTION: [
        "roll",
        "bass"]